{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Pine Script",
	"patterns": [
    {
      "match": "//.*",
      "name": "comment.pine"
    },
    {
			"include": "#constants"
		},
    {
			"include": "#functions"
		},
    {
			"include": "#operators"
		},
    {
			"include": "#keywords"
		},
		{
			"include": "#strings"
		}
	],
	"repository": {
    "strings": {
      "patterns": [
        {
          "begin": "\"",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.pine"
            }
          },
          "end": "\"",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.pine"
            }
          },
          "name" : "string.quoted.double.pine",
          "patterns": [
            {
              "match": "\\\\.",
              "name": "constant.character.escaped.pine"
            }
          ]    
        },
        {
          "begin": "'",
          "beginCaptures": {
            "1": { 
							"name": "punctuation.definition.string.begin.pine"
            }
          },
          "end": "'",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.pine"
            }
          },
          "name" : "string.quoted.double.pine",
          "patterns": [
            {
              "match": "\\\\.",
              "name": "constant.character.escaped.pine"
            }
          ]          
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "match": "\\b(avg|bar(color|since)|bgcolor|change|cross|donchian|falling|fill|highest|iff|input|lowest|m(ax|in)|plot(arrow|bar|candle|char|shape|figure)?|rising|security|tostring|(e|s)ma|study|valuewhen)(?=\\()",
          "captures": {
						"1": { 
								"name": "support.function.pine" 
						}
					}
        },
        {
          "match": "[a-zA-Z_][a-zA-Z0-9_]*\\s*(?=\\=)",
          "name": "variable.parameter.pine"
        },
        {
          "match": "([a-zA-Z_][a-zA-Z0-9_]*)\\(.*\\)\\s(=>)\\s",
          "captures": {
						"1": { 
							"name": "support.function.pine" 
						},
						"2": {
							"name": "keyword.operator.assignment.pine"
						}
					}
        }
      ]
    },
    "constants": {
      "patterns":[
        {
          "match": "\\b(true|false)\\b",
          "name": "constant.language.pine"
        },
        {
          "match": "\\b(open|high|low|close|volume|na|len|period|tikerid)\\b",
          "name": "constant.language.pine"
        },
        {
          "match": "\\b(monday|tuesday|wednesday|thursday|friday|saturday|sunday|dayofweek)\\b",
          "name": "constant.language.pine"
        },
        {
          "match": "\\b(line|histogram|cross|area|columns|circles)\\b",
          "name": "constant.language.pine"
        },
        {
          "match": "\\blocation\\.(abovebar|belowbar|top|bottom|absolute)\\b",
          "name": "constant.language.pine"
        },
        {
          "match": "\\bshape\\.(x(cross)?|(triangle|arrow|label)(up|down)|flag|circle|square|diamond)\\b",
          "name": "constant.language.pine"
        },
        {
          "match": "\\b(aqua|black|silver|gray|white|maroon|red|purple|fuchsia|green|lime|olive|yellow|navy|blue|teal|orange)\\b",
          "name": "constant.language.pine"
        },
        {
          "match": "#[a-fA-F0-9]{6}",
          "name": "contstant.support.pine"
        },
        {
          "match": "\\b([0-9]+)\\b",
          "name": "constant.numeric.pine"
        }    
      ]
    },
    "operators": {
      "patterns": [
        {
          "match": "(\\-|\\+|\\*|/|%)",
          "name": "keyword.operator.arithmetic.pine"
        },
        {
          "match": "(==|!=|<=|>=|<|>)",
          "name": "keyword.operator.comparison.pine"
        },
        {
          "match": "(\\?|\\:)",
          "name": "keyword.operator.ternary.pine"
        },
        {
          "match": "\\b(and|or|not)\\b",
          "name": "keyword.operator.logical.pine"
        },
        {
          "match": "=",
          "name": "keyword.operator.assignment.pine"
        }        
      ]
    },
    "keywords": {
			"patterns": [{
				"name": "keyword.control.pine",
				"match": "\\b(if|else|while|for|return)\\b"
			}]
		}
	},
	"scopeName": "source.pine"
}